{"ast":null,"code":"var _jsxFileName = \"/Users/musubimanagement/Documents/ChatAPP/public/src/pages/SetAvatar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\nimport { setAvatarRoute } from \"../utils/APIRoutes\";\nimport { Buffer } from 'buffer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SetAvatar() {\n  _s();\n  const api = \"https://api.multiavatar.com/45678945\";\n  const navigate = useNavigate();\n  const [avatars, setAvatar] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 8000,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"dark\"\n  };\n  useEffect(async () => {\n    if (!localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)) navigate(\"/login\");\n  }, []);\n  const setProfilePicture = async () => {\n    if (selectedAvatar === undefined) {\n      toast.error(\"Please select an avatar\", toastOptions);\n    } else {\n      const user = await JSON.parse(localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY));\n      const {\n        data\n      } = await axios.post(`${setAvatarRoute}/${user._id}`, {\n        image: avatars[selectedAvatar]\n      });\n      if (data.isSet) {\n        user.isAvatarImageSet = true;\n        user.avatarImage = data.image;\n        localStorage.setItem(process.env.REACT_APP_LOCALHOST_KEY, JSON.stringify(user));\n        navigate(\"/\");\n      } else {\n        toast.error(\"Error setting avatar. Please try again.\", toastOptions);\n      }\n    }\n  };\n  useEffect(async () => {\n    const data = [];\n    for (let i = 0; i < 4; i++) {\n      const image = await axios.get(`${api}/${Math.round(Math.random() * 1000)}`);\n      const buffer = new Buffer(image.data);\n      data.push(buffer.toString(\"base64\"));\n    }\n    setAvatars(data);\n    setIsLoading(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Pick an Avatar as Your Profile Pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(SetAvatar, \"i3SBpdikKG57YSdZaNxrIxpIfjo=\", false, function () {\n  return [useNavigate];\n});\n_c = SetAvatar;\nconst Container = styled.div``;\n_c2 = Container;\nexport default SetAvatar;\nvar _c, _c2;\n$RefreshReg$(_c, \"SetAvatar\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","styled","useNavigate","ToastContainer","toast","axios","setAvatarRoute","Buffer","SetAvatar","api","navigate","avatars","setAvatar","isLoading","setIsLoading","selectedAvatar","setSelectedAvatar","undefined","toastOptions","position","autoClose","pauseOnHover","draggable","theme","localStorage","getItem","process","env","REACT_APP_LOCALHOST_KEY","setProfilePicture","error","user","JSON","parse","data","post","_id","image","isSet","isAvatarImageSet","avatarImage","setItem","stringify","i","get","Math","round","random","buffer","push","toString","setAvatars","Container","div"],"sources":["/Users/musubimanagement/Documents/ChatAPP/public/src/pages/SetAvatar.jsx"],"sourcesContent":["import React,{useState,useEffect} from 'react';\nimport styled from \"styled-components\";\nimport {useNavigate} from 'react-router-dom';\nimport {ToastContainer,toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\nimport {setAvatarRoute} from \"../utils/APIRoutes\";\nimport {Buffer} from 'buffer';\n\nfunction SetAvatar() {\n    const api=\"https://api.multiavatar.com/45678945\";\n    const navigate=useNavigate();\n    const [avatars,setAvatar]=useState([]);\n    const [isLoading,setIsLoading]=useState(true);\n    const [selectedAvatar,setSelectedAvatar]=useState(undefined);\n    const toastOptions={\n        position:\"bottom-right\",\n        autoClose:8000,\n        pauseOnHover:true,\n        draggable:true,\n        theme:\"dark\",\n     }\n\n       useEffect(async () => {\n    if (!localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY))\n      navigate(\"/login\");\n  }, []);\n\n  const setProfilePicture = async () => {\n    if (selectedAvatar === undefined) {\n      toast.error(\"Please select an avatar\", toastOptions);\n    } else {\n      const user = await JSON.parse(\n        localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\n      );\n\n      const { data } = await axios.post(`${setAvatarRoute}/${user._id}`, {\n        image: avatars[selectedAvatar],\n      });\n\n      if (data.isSet) {\n        user.isAvatarImageSet = true;\n        user.avatarImage = data.image;\n        localStorage.setItem(\n          process.env.REACT_APP_LOCALHOST_KEY,\n          JSON.stringify(user)\n        );\n        navigate(\"/\");\n      } else {\n        toast.error(\"Error setting avatar. Please try again.\", toastOptions);\n      }\n    }\n  };\n\n  useEffect(async () => {\n    const data = [];\n    for (let i = 0; i < 4; i++) {\n      const image = await axios.get(\n        `${api}/${Math.round(Math.random() * 1000)}`\n      );\n      const buffer = new Buffer(image.data);\n      data.push(buffer.toString(\"base64\"));\n    }\n    setAvatars(data);\n    setIsLoading(false);\n  }, []);\n\n    return (\n    <>\n        <Container>\n            <div className=\"title-container\">\n                <h1>\n                    Pick an Avatar as Your Profile Pic\n                </h1>\n            </div>\n\n            {/* <div className=\"avatars\">\n                {\n                    avatars.map((avatar,index)=>{\n                        return(\n                            <div key={index} className={`avatar ${selectedAvatar=== index ?\"selected\":\"\"}`}>\n                                <img src={`data:image/svg+xml;base64,${avatar}`} alt=\"avatar\" onClick={()=>setSelectedAvatar(index)}/>\n                                \n\n                            </div>\n                        )\n                    })\n                }\n            </div> */}\n\n        </Container>\n        <ToastContainer />\n    </>\n  )\n}\n\n\nconst Container=styled.div``\nexport default SetAvatar;"],"mappings":"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"},"metadata":{},"sourceType":"module"}